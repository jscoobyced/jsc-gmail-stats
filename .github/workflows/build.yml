name: Build

on:
  push:
    branches:
      - "main"
  release:
    types: [published]

env:
  IMAGE_NAME: jsc-gmail-stats
  IMAGE_TITLE: JSC Gmail Stats Application
  IMAGE_DESCRIPTION: This is the image for JSC Gmail Stats Application.

jobs:
  build:
    name: Build source code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: gradle/actions/setup-gradle@v3

      - name: Set version
        run: |
          echo "APP_VERSION=$(./gradlew properties -q | awk '/^version:/ {print $2}')" > version.txt

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: version-file
          retention-days: 1
          path: version.txt

      - name: Build with Gradle
        run: ./gradlew build

  build-image:
    name: Build image and push to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: version-file

      - name: Set version
        run: |
          cat version.txt >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_TITLE }}
            org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: etc/docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          args: APP_VERSION=${{ env.APP_VERSION }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: GIT_TAG=${{ github.ref_name }}